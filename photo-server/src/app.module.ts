import { Module } from '@nestjs/common';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { ConfigModule } from '@nestjs/config';
import { PhotoModule } from './photo/photo.module';

@Module({
  imports: [ConfigModule.forRoot({ isGlobal: true }), PhotoModule],
  controllers: [AppController],
  providers: [AppService],
})
export class AppModule {}



// Этот модуль служит корневым модулем приложения и отвечает за организацию и настройку различных компонентов. Вот подробное описание его компонентов и функциональности:

// Ключевые компоненты
// Импорты:

// Декоратор Module импортируется из @nestjs/common, который используется для определения модуля в NestJS.
// AppController и AppService импортируются из локальных файлов, которые обрабатывают входящие запросы и бизнес-логику соответственно.
// ConfigModule импортируется из @nestjs/config, что позволяет приложению управлять параметрами конфигурации.
// PhotoModule импортируется из каталога фотографий, который содержит функции, связанные с обработкой фотографий.
// Определение модуля:

// Класс AppModule декорируется декоратором @Module, который является фундаментальным строительным блоком в приложениях NestJS. Этот декоратор принимает объект с определенными свойствами, которые определяют компоненты модуля.
// Свойства модуля:

// imports: этот массив включает модули, от которых зависит AppModule:

// ConfigModule.forRoot({ isGlobal: true }): это инициализирует модуль конфигурации глобально, делая переменные конфигурации доступными во всем приложении.
// PhotoModule: это импортирует PhotoModule, который инкапсулирует все функции, связанные с фотографиями, такие как контроллеры и службы для управления фотографиями.
// controllers: этот массив перечисляет контроллеры, которые являются частью модуля:

// AppController: этот контроллер обрабатывает входящие запросы и взаимодействует с AppService.
// providers: этот массив содержит службы, которые доступны для внедрения зависимостей в модуле:

// AppService: эта служба содержит бизнес-логику для приложения, которая может использоваться AppController или другими поставщиками в модуле.
// Резюме
// Вкратце, AppModule служит основным модулем приложения NestJS, объединяя конфигурацию, контроллеры и службы. Он устанавливает структуру приложения, импортируя необходимые модули и определяя компоненты, которые будут обрабатывать запросы и предоставлять бизнес-логику.

// Эта модульная архитектура является одной из ключевых особенностей NestJS, способствующей разделению задач и упрощающей обслуживание и масштабирование приложения. Включение ConfigModule позволяет централизованно управлять параметрами конфигурации, в то время как PhotoModule указывает на то, что приложение имеет функции, связанные с управлением фотографиями.